package com.springbootdemo.model;
// Generated Mar 31, 2023, 10:43:33 PM by Hibernate Tools 6.1.7.Final

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.JoinTable;
import jakarta.persistence.ManyToMany;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import java.time.ZonedDateTime;
import java.util.HashSet;
import java.util.Set;
import org.hibernate.annotations.GenericGenerator;

/**
 * Employee generated by hbm2java
 */
@Entity
@Table(name = "employees", schema = "public")
public class Employee implements java.io.Serializable {

    private Long id;
    private Department department;
    private String name;
    private String lastname;
    private ZonedDateTime createdAt;
    private ZonedDateTime updatedAt;
    private Set<JobRole> jobRoles = new HashSet<JobRole>(0);

    public Employee() {}

    public Employee(
            Department department, String name, String lastname, ZonedDateTime createdAt, ZonedDateTime updatedAt) {
        this.department = department;
        this.name = name;
        this.lastname = lastname;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    public Employee(
            Department department,
            String name,
            String lastname,
            ZonedDateTime createdAt,
            ZonedDateTime updatedAt,
            Set<JobRole> jobRoles) {
        this.department = department;
        this.name = name;
        this.lastname = lastname;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.jobRoles = jobRoles;
    }

    @GenericGenerator(
            name = "com.springbootdemo.model.EmployeeIdGenerator",
            strategy = "org.hibernate.id.IdentityGenerator")
    @Id
    @GeneratedValue(generator = "com.springbootdemo.model.EmployeeIdGenerator")
    @Column(name = "id", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "department_id", nullable = false)
    public Department getDepartment() {
        return this.department;
    }

    public void setDepartment(Department department) {
        this.department = department;
    }

    @Column(name = "name", nullable = false)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "lastname", nullable = false)
    public String getLastname() {
        return this.lastname;
    }

    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    @Column(name = "created_at", nullable = false, length = 35)
    public ZonedDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(ZonedDateTime createdAt) {
        this.createdAt = createdAt;
    }

    @Column(name = "updated_at", nullable = false, length = 35)
    public ZonedDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(ZonedDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(
            name = "employees_job_roles",
            schema = "public",
            joinColumns = {@JoinColumn(name = "employee_id", nullable = false, updatable = false)},
            inverseJoinColumns = {@JoinColumn(name = "job_role_id", nullable = false, updatable = false)})
    public Set<JobRole> getJobRoles() {
        return this.jobRoles;
    }

    public void setJobRoles(Set<JobRole> jobRoles) {
        this.jobRoles = jobRoles;
    }
}
